# https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
# https://wordpress.org/support/article/nginx/#generic-and-multi-site-support

map $uri $blogname{
    # NOTE: Our version of Nginx doesn't seem to like the regex:
    #
    # ~^(?P/[^/]+/)files/(.*)
    #
    # as recommended by the WordPress.org Nginx guide above. Replacing the `P`
    # with `<blogpath>` fixes it.
    ~^(?<blogpath>/[^/]+/)files/(.*)       $blogpath ;
}

map $blogname $blogid{
    default -999;

    #Ref: https://wordpress.org/extend/plugins/nginx-helper/
    #include /var/www/wordpress/wp-content/plugins/nginx-helper/map.conf ;
}

upstream appserver_php {
  server fpm:9000;
}

server {
    server_name         multicare3.lndo.site;

    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443;

    root                /app/wp;
    error_log           /var/log/nginx-error.log;
    access_log          /var/log/nginx-access.log  main;

    proxy_set_header X-Forwarded-Proto $scheme;

    ssl_certificate     /certs/cert.pem;
    ssl_certificate_key /certs/cert.key;

    index index.php;
    charset utf-8;

    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /app/wp;
    #     internal;
    # }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^(/[^/]+/)?files/(.+) {
        try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
        access_log off;     log_not_found off; expires max;
    }

    #avoid php readfile()
    location ^~ /blogs.dir {
        internal;
        alias /var/www/example.com/htdocs/wp-content/blogs.dir ;
        access_log off;     log_not_found off; expires max;
    }

    if (!-e $request_filename) {
        rewrite /wp-admin$ $scheme://$host$request_uri/ permanent;
        rewrite ^(/[^/]+)?(/wp-.*) $2 last;
        rewrite ^(/[^/]+)?(/.*\.php) $2 last;
    }

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass appserver_php;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 8 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }

    location ~ /\.ht {
        deny all;
    }

    # allow file uploads up to 50MB
    client_max_body_size 50M;
}
