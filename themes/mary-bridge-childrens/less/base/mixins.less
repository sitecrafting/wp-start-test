//
// Mixins
// --------------------------------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }
  &:after {
    clear: both;
  }
}

//helps smooth out text keeping it from looking to chunky especially light text on dark background
.text-rendering(){
    text-rendering: optimizelegibility;
	-webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.element-overlay(@color: #000, @opacity: 0.4 ){
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: @color;
    opacity: @opacity;
}

// Center-align a block level element
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
  &:-moz-placeholder            { color: @color; } // Firefox 4-18
  &::-moz-placeholder           { color: @color; } // Firefox 19+
  &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// Text overflow
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.hide-text(){
  overflow: hidden;
  white-space: nowrap;
  text-indent: 101%;
}
.plain-list(){
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.visuallyhidden(){
  clip: rect(0 0 0 0); 
  clip-path: inset(50%);
  height: 1px; 
  width: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `@input-focus-border` variable.
.form-control-focus(@color: @input-border-focus) {

  @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);

  &:focus {
    border-color: @color;
    outline: 0;
    //box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @color-rgba;
  }

}
